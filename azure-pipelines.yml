# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
pool:
  vmImage: 'ubuntu-latest' # other options: 'macOS-latest', 'windows-latest'
steps:

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'current'
    targetPath: '$(Pipeline.Workspace)'
- task: JavaToolInstaller@0 
  inputs: 
    versionSpec: '17' 
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: 'default'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
